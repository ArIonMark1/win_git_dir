-- MySQL Script generated by MySQL Workbench
-- Fri Jul 31 23:43:32 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema vk
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `vk` ;

-- -----------------------------------------------------
-- Schema vk
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `vk` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `vk` ;

-- -----------------------------------------------------
-- Table `vk`.`media_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vk`.`media_types` ;

CREATE TABLE IF NOT EXISTS `vk`.`media_types` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID типа медиафайла',
  `name` VARCHAR(255) NOT NULL COMMENT 'название типа медиафайла',
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'дата и время создания',
  `updated_at` DATETIME NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'дата и время изменения',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'типы медиафайлов';


-- -----------------------------------------------------
-- Table `vk`.`media`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vk`.`media` ;

CREATE TABLE IF NOT EXISTS `vk`.`media` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID медиафайла',
  `media_type_id` INT UNSIGNED NOT NULL COMMENT 'ID типа медиафайла',
  `user_id` INT UNSIGNED NOT NULL COMMENT 'ID пользователя - владельца медиафайла',
  `blob` BLOB NOT NULL COMMENT 'файл в формате blob',
  `size` INT UNSIGNED NOT NULL COMMENT 'размер файла в байтах',
  `metadata` JSON NULL DEFAULT NULL COMMENT 'массив метаданных о файле в формате JSON',
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'дата и время создания',
  `updated_at` DATETIME NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'дата и время изменения',
  PRIMARY KEY (`id`),
  INDEX `media_type_idx` (`media_type_id` ASC) INVISIBLE,
  INDEX `user_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_media__media_types`
    FOREIGN KEY (`media_type_id`)
    REFERENCES `vk`.`media_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_media__users`
    FOREIGN KEY (`user_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'медиафайлы';


-- -----------------------------------------------------
-- Table `vk`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vk`.`users` ;

CREATE TABLE IF NOT EXISTS `vk`.`users` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID пользователя',
  `firstname` VARCHAR(255) NOT NULL COMMENT 'имя',
  `lastname` VARCHAR(255) NOT NULL COMMENT 'фамилия',
  `email` VARCHAR(255) NOT NULL COMMENT 'email',
  `phone` BIGINT(11) UNSIGNED NULL COMMENT 'телефон',
  `photo_id` INT UNSIGNED NULL DEFAULT NULL COMMENT 'ID медиафайла - фото пользователя',
  `password_hash` CHAR(64) NULL DEFAULT NULL COMMENT 'хэш пароля',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC) INVISIBLE,
  INDEX `firsname_lastname_idx` (`firstname` ASC, `lastname` ASC) VISIBLE,
  INDEX `photo_idx` (`photo_id` ASC) INVISIBLE,
  CONSTRAINT `fk_users__media`
    FOREIGN KEY (`photo_id`)
    REFERENCES `vk`.`media` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'пользователи';


-- -----------------------------------------------------
-- Table `vk`.`profiles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vk`.`profiles` ;

CREATE TABLE IF NOT EXISTS `vk`.`profiles` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID пользователя',
  `gender` TINYINT(1) UNSIGNED NOT NULL DEFAULT 0 COMMENT 'пол: 0 - неопр, 1 - муж, 2 - жен',
  `birthday` DATE NULL DEFAULT NULL COMMENT 'день рождения',
  `location` VARCHAR(255) NULL DEFAULT NULL COMMENT 'адрес',
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'дата и время создания',
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_profiles__users`
    FOREIGN KEY (`user_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'профили пользователей';


-- -----------------------------------------------------
-- Table `vk`.`messages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vk`.`messages` ;

CREATE TABLE IF NOT EXISTS `vk`.`messages` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID сообщения',
  `from_user_id` INT UNSIGNED NOT NULL COMMENT 'ID пользователя - отправителя',
  `to_user_id` INT UNSIGNED NOT NULL COMMENT 'ID пользователя - получателя',
  `text` TEXT NOT NULL COMMENT 'текст сообщения',
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'дата и время создания',
  PRIMARY KEY (`id`),
  INDEX `from_user_idx` (`from_user_id` ASC) INVISIBLE,
  INDEX `to_user_idx` (`to_user_id` ASC) INVISIBLE,
  CONSTRAINT `fk_messages__users__from`
    FOREIGN KEY (`from_user_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_messages__users__to`
    FOREIGN KEY (`to_user_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'сообщения';


-- -----------------------------------------------------
-- Table `vk`.`friend_requests`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vk`.`friend_requests` ;

CREATE TABLE IF NOT EXISTS `vk`.`friend_requests` (
  `from_user_id` INT UNSIGNED NOT NULL COMMENT 'ID пользователя - отправителя запроса',
  `to_user_id` INT UNSIGNED NOT NULL COMMENT 'ID пользователя - получателя запроса',
  `status` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'статус: 0 - неотвечен, 1 - принятый, 2 - отклоненный',
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'дата и время отправки запроса',
  `updated_at` DATETIME NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'дата и время подтверждения/отклонения',
  INDEX `from_user_idx` (`from_user_id` ASC) VISIBLE,
  INDEX `to_user_idx` (`to_user_id` ASC) VISIBLE,
  PRIMARY KEY (`from_user_id`, `to_user_id`),
  CONSTRAINT `fk_friend_requests__users__from`
    FOREIGN KEY (`from_user_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_friend_requests__users__to`
    FOREIGN KEY (`to_user_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'запросы в друзья\nдобавить в CREATE (...) после FOREIGN KEY - CHECK (from_users_id <> to_users_id)';


-- -----------------------------------------------------
-- Table `vk`.`communities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vk`.`communities` ;

CREATE TABLE IF NOT EXISTS `vk`.`communities` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID группы',
  `name` VARCHAR(255) NOT NULL COMMENT 'название группы',
  `admin_id` INT UNSIGNED NOT NULL COMMENT 'ID пользователя - администратора',
  PRIMARY KEY (`id`),
  INDEX `admin_idx` (`admin_id` ASC) VISIBLE,
  INDEX `name_idx` (`name` ASC) INVISIBLE,
  CONSTRAINT `fk_communities__users__admin`
    FOREIGN KEY (`admin_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'группы';


-- -----------------------------------------------------
-- Table `vk`.`users_communities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vk`.`users_communities` ;

CREATE TABLE IF NOT EXISTS `vk`.`users_communities` (
  `community_id` INT UNSIGNED NOT NULL COMMENT 'ID группы',
  `user_id` INT UNSIGNED NOT NULL COMMENT 'ID пользователя',
  INDEX `user_idx` (`user_id` ASC) VISIBLE,
  INDEX `community_idx` (`community_id` ASC) VISIBLE,
  PRIMARY KEY (`community_id`, `user_id`),
  CONSTRAINT `fk_users_communities__users`
    FOREIGN KEY (`user_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_communities__communities`
    FOREIGN KEY (`community_id`)
    REFERENCES `vk`.`communities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'участники группы';


-- -----------------------------------------------------
-- Table `vk`.`albums`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vk`.`albums` ;

CREATE TABLE IF NOT EXISTS `vk`.`albums` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID фотоальбома',
  `name` VARCHAR(255) NOT NULL COMMENT 'название фотоальбома',
  `user_id` INT UNSIGNED NOT NULL COMMENT 'ID пользователя - владельца фотоальбома',
  PRIMARY KEY (`id`),
  INDEX `user_idx` (`user_id` ASC) INVISIBLE,
  CONSTRAINT `fk_albums__users`
    FOREIGN KEY (`user_id`)
    REFERENCES `vk`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'фотоальбомы';


-- -----------------------------------------------------
-- Table `vk`.`photos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vk`.`photos` ;

CREATE TABLE IF NOT EXISTS `vk`.`photos` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID фотографии',
  `album_id` INT UNSIGNED NOT NULL COMMENT 'ID фотоальбома',
  `media_id` INT UNSIGNED NOT NULL COMMENT 'ID медиафайла',
  PRIMARY KEY (`id`),
  INDEX `media_idx` (`media_id` ASC) VISIBLE,
  INDEX `album_idx` (`album_id` ASC) VISIBLE,
  UNIQUE INDEX `album_media_UNIQUE` (`album_id` ASC, `media_id` ASC) VISIBLE,
  CONSTRAINT `fk_photos__media1`
    FOREIGN KEY (`media_id`)
    REFERENCES `vk`.`media` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_photos__photo_albums1`
    FOREIGN KEY (`album_id`)
    REFERENCES `vk`.`albums` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'фотографии';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
